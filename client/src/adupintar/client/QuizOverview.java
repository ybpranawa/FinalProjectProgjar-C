/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adupintar.client;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import object.ChoiceData;
import object.EndQuizData;
import object.QuizAnswer;
import object.QuizData;
import object.RequestSetUsername;
import object.Response;

/**
 *
 * @author Fendy
 */
public class QuizOverview extends javax.swing.JFrame {
    
    private Play parent;
    private String enemyUsername;
    
    /**
     * Creates new form QuizOverview
     * @param enemyUsername
     * @param rounds
     * @param parent
     */
    public QuizOverview(String enemyUsername, int rounds, Play parent) {
        this.parent = parent;
        initComponents();
        
        this.enemyUsername = enemyUsername;
        lblEnemy.setText("Enemy: " + enemyUsername);
        lblRounds.setText("Rounds: " + rounds);
        
        panelKategori.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblEnemy = new javax.swing.JLabel();
        lblRounds = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblFormat = new javax.swing.JLabel();
        panelKategori = new javax.swing.JPanel();
        btnPendidikanCategory = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnKesehatanCategory = new javax.swing.JButton();
        btnSainsCategory = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setText("Quiz Time!!!");

        lblEnemy.setText("Enemy: Username");

        lblRounds.setText("Rounds: #number");

        lblFormat.setText("Format: classic");

        btnPendidikanCategory.setText("Pendidikan");
        btnPendidikanCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPendidikanCategoryActionPerformed(evt);
            }
        });

        jLabel2.setText("Pilih kategori pertanyaan:");

        btnKesehatanCategory.setText("Kesehatan");
        btnKesehatanCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKesehatanCategoryActionPerformed(evt);
            }
        });

        btnSainsCategory.setText("Sains");
        btnSainsCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSainsCategoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelKategoriLayout = new javax.swing.GroupLayout(panelKategori);
        panelKategori.setLayout(panelKategoriLayout);
        panelKategoriLayout.setHorizontalGroup(
            panelKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelKategoriLayout.createSequentialGroup()
                .addGroup(panelKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelKategoriLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnPendidikanCategory)
                        .addGap(18, 18, 18)
                        .addComponent(btnKesehatanCategory))
                    .addGroup(panelKategoriLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(btnSainsCategory))
                    .addGroup(panelKategoriLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelKategoriLayout.setVerticalGroup(
            panelKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelKategoriLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPendidikanCategory)
                    .addComponent(btnKesehatanCategory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSainsCategory)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(lblEnemy)
                    .addComponent(lblRounds)
                    .addComponent(lblFormat)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(lblEnemy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRounds)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblFormat)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        this.parent.setVisible(true);
        
        GameServerConnection connection = GameServerConnection.getInstance();
        ObjectOutputStream oos = connection.getOos();
        ObjectInputStream ois = connection.getOis();
        
        Credentials cred = Credentials.getInstance();
        if (cred != null) {
            try {
                oos.writeObject(new RequestSetUsername(cred.getUsername()));
                oos.reset();
            } catch (IOException ex) {
                Logger.getLogger(QuizOverview.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        this.dispose();
    }//GEN-LAST:event_formWindowClosed

    private void btnPendidikanCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPendidikanCategoryActionPerformed
        try {
            // 1
            sendChoiceData(1);
            this.panelKategori.setVisible(false);
        } catch (IOException ex) {
            Logger.getLogger(QuizOverview.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPendidikanCategoryActionPerformed

    private void btnSainsCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSainsCategoryActionPerformed
        try {
            // 3
            sendChoiceData(3);
            this.panelKategori.setVisible(false);
        } catch (IOException ex) {
            Logger.getLogger(QuizOverview.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSainsCategoryActionPerformed

    private void btnKesehatanCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKesehatanCategoryActionPerformed
        try {
            // 2
            sendChoiceData(2);
            this.panelKategori.setVisible(false);
        } catch (IOException ex) {
            Logger.getLogger(QuizOverview.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnKesehatanCategoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public void showForm() {

        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKesehatanCategory;
    private javax.swing.JButton btnPendidikanCategory;
    private javax.swing.JButton btnSainsCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblEnemy;
    private javax.swing.JLabel lblFormat;
    private javax.swing.JLabel lblRounds;
    private javax.swing.JPanel panelKategori;
    // End of variables declaration//GEN-END:variables

    public void chooseCategory() {
        panelKategori.setVisible(true);
    }
    
    private void sendData(Object data) throws IOException {
        GameServerConnection connection = GameServerConnection.getInstance();
        ObjectOutputStream oos = connection.getOos();
        
        oos.writeObject(data);
        oos.reset();
    }
    
    private void sendChoiceData(int choice) throws IOException {
        ChoiceData data = new ChoiceData(choice);
        this.sendData(data);
    }
    
    public void showQuiz(QuizData data) throws IOException {
        String[] choices = data.getChoices();
        String question = data.getQuestion();
        int quizNumber = data.getQuizNumber();
        int response = JOptionPane.showOptionDialog(
                null, 
                question, 
                "Quiz number: " + quizNumber + " Vs " + enemyUsername,
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.PLAIN_MESSAGE,
                null, 
                choices, 
                choices[0]);
        
        this.sendQuestionAnswer(response);
    }

    private void sendQuestionAnswer(int answer) throws IOException {
        QuizAnswer data = new QuizAnswer(answer);
        this.sendData(data);
    }
    
    public void endQuiz(EndQuizData data) {
        Credentials me = Credentials.getInstance();
        QuizResult formResult = new QuizResult(this, me.getUsername(), enemyUsername, data);
        formResult.showForm();
    }
}
