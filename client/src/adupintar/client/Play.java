/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adupintar.client;

import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Container;
import java.awt.GridLayout;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.layout.Border;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;
import object.LogOutData;
import object.MapData;
import object.RequestMapData;
import object.RequestMove;

/**
 *
 * @author fendy
 */
public class Play extends javax.swing.JFrame {

    private final JFrame parent;
    private final int dimension;
    
    /**
     * Creates new form Play
     * @param parent
     * @param dimension
     */
    public Play(JFrame parent, int dimension) throws IOException, ClassNotFoundException {
        this.parent = parent;
        this.dimension = dimension;
        initComponents();
        
        initMap();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        btnHelp = new javax.swing.JButton();
        btnEndGame = new javax.swing.JButton();
        btnFriends = new javax.swing.JButton();
        panelGridMap = new javax.swing.JPanel();

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setText("Adu Pintar!");

        btnHelp.setText("Help");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });

        btnEndGame.setText("End Game");
        btnEndGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEndGameActionPerformed(evt);
            }
        });

        btnFriends.setText("Friends");
        btnFriends.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFriendsActionPerformed(evt);
            }
        });

        panelGridMap.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        panelGridMap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                panelGridMapKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panelGridMapLayout = new javax.swing.GroupLayout(panelGridMap);
        panelGridMap.setLayout(panelGridMapLayout);
        panelGridMapLayout.setHorizontalGroup(
            panelGridMapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 317, Short.MAX_VALUE)
        );
        panelGridMapLayout.setVerticalGroup(
            panelGridMapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 282, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEndGame)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFriends))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnHelp))
                    .addComponent(panelGridMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnHelp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelGridMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEndGame)
                    .addComponent(btnFriends))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        Credentials.dispose();
        ChatServerConnection.dispose();
        GameServerConnection.dispose();
        
        try {
            ServerConnection connection = ServerConnection.getInstance();
            connection.getOos().writeObject(new LogOutData());
            connection.getOos().reset();
        } catch (IOException ex) {
            Logger.getLogger(Play.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if (this.parent != null) {
            this.parent.setVisible(true);
        } else {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosed

    private void btnFriendsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFriendsActionPerformed
        try {
            FriendList friendlistForm = new FriendList();
            friendlistForm.showForm();
        } catch (IOException ex) {
            Logger.getLogger(Play.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Play.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnFriendsActionPerformed

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        Help helpForm=new Help(this);
        helpForm.showForm();
        this.setVisible(false);
    }//GEN-LAST:event_btnHelpActionPerformed

    private void btnEndGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEndGameActionPerformed
        this.parent.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnEndGameActionPerformed

    private void panelGridMapKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_panelGridMapKeyPressed
        int move = -1;
        if (evt.getKeyCode() == KeyEvent.VK_LEFT){
            move = 0;
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            move = 1;
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            move = 2;
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            move = 3;
        } 
        if (move != -1) {
            try {
                GameServerConnection connection = GameServerConnection.getInstance();
                ObjectOutputStream oos = connection.getOos();
                oos.writeObject(new RequestMove(move));
                oos.reset();
                
            } catch (IOException ex) {
                Logger.getLogger(Play.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_panelGridMapKeyPressed
    
    public void showForm() {
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEndGame;
    private javax.swing.JButton btnFriends;
    private javax.swing.JButton btnHelp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelGridMap;
    // End of variables declaration//GEN-END:variables
    private JLabel[][] map = new JLabel[10][10];
    
    
    private void initMap() throws IOException, ClassNotFoundException {
        GameServerConnection connection = GameServerConnection.getInstance();
        ObjectOutputStream oos = connection.getOos();
        ObjectInputStream ois = connection.getOis();
        
        Container pane = panelGridMap;
        pane.setLayout(new GridLayout(this.dimension, this.dimension));
        for (int i=0; i<this.dimension; i++) {
            for (int j=0; j<this.dimension; j++) {
                map[i][j] = new JLabel();
                javax.swing.border.Border border = BorderFactory.createLineBorder(Color.BLUE,1);
                map[i][j].setBorder(border);
                pane.add(map[i][j]);
            }
        }
        
        GameListener listener = new GameListener(this.dimension, this);
        Thread t = new Thread(listener);
        t.start();

        Manager.setGameListener(listener);
    }
    
    public void setMap(int i, int j, String text) {
        map[i][j].setText(text);
    }
}
